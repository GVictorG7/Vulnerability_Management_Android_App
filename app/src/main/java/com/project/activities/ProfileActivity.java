package com.project.activities;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.project.R;
import com.project.domain.Account;
import com.project.domain.Vulnerability;
import com.project.services.APIClient;
import com.project.services.AccountService;

import java.util.ArrayList;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class ProfileActivity extends AppCompatActivity {
    private static final String USERNAME_PARAMETER = "username";
    private static final String LIST_PARAMETER = "list";
    private EditText editTextFullName;
    private String username;
    private Account account;
    private ArrayList<Vulnerability> vulnerabilities;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_profile);
        setTitle(R.string.change_profile);

        EditText editTextPassword = findViewById(R.id.editTextPassword);
        editTextFullName = findViewById(R.id.editTextFullName);
        Button buttonSave = findViewById(R.id.buttonSave);
        buttonSave.setOnClickListener(v -> {
            try {
                String password = editTextPassword.getText().toString();
                if (!password.isEmpty()) {
                    account.setPassword(password);
                }
                account.setFullName(editTextFullName.getText().toString());
                AccountService accountService = APIClient.getClient().create(AccountService.class);
                Call<Boolean> call = accountService.update(account);
                call.enqueue(new Callback<Boolean>() {
                    @Override
                    public void onResponse(@NonNull Call call, @NonNull Response response) {
                        Intent intent = new Intent(ProfileActivity.this, WelcomeActivity.class);
                        intent.putExtra(LIST_PARAMETER, vulnerabilities);
                        intent.putExtra(USERNAME_PARAMETER, username);
                        startActivity(intent);
                    }

                    @Override
                    public void onFailure(@NonNull Call call, @NonNull Throwable t) {
                        Toast.makeText(getApplicationContext(), getString(R.string.error), Toast.LENGTH_SHORT).show();
                    }
                });
            } catch (Exception e) {
                Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
        Button buttonCancel = findViewById(R.id.buttonCancel);
        buttonCancel.setOnClickListener(v -> {
            Intent intent = new Intent(ProfileActivity.this, WelcomeActivity.class);
            intent.putExtra(LIST_PARAMETER, vulnerabilities);
            intent.putExtra(USERNAME_PARAMETER, username);
            startActivity(intent);
        });

        loadData();
    }

    private void loadData() {
        try {
            Intent intent = getIntent();
            vulnerabilities = (ArrayList<Vulnerability>) intent.getSerializableExtra(LIST_PARAMETER);
            username = intent.getStringExtra(USERNAME_PARAMETER);
            AccountService accountService = APIClient.getClient().create(AccountService.class);
            Call<Account> call = accountService.find(username);
            call.enqueue(new Callback<Account>() {
                @Override
                public void onResponse(@NonNull Call call, @NonNull Response response) {
                    account = (Account) response.body();
                    if (account != null) {
                        editTextFullName.setText(account.getFullName());
                    }
                }

                @Override
                public void onFailure(@NonNull Call call, @NonNull Throwable t) {
                    Toast.makeText(getApplicationContext(), "Fail at load date:" + getString(R.string.error), Toast.LENGTH_SHORT).show();
                }
            });
        } catch (Exception e) {
            Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
        }
    }
}
